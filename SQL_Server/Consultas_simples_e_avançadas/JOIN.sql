-- BASE SUCOS_FRUTAS
SELECT * FROM TABELA_DE_VENDEDORES
SELECT * FROM NOTAS_FISCAIS

-- MOSTRA MATRICULA NOME E NUMERO DE VENDAS DE VENDEDORES, FAZENDO INNER JOIN PELO CAMPO MATRICULA
SELECT NOTAS_FISCAIS.MATRICULA, NOME, COUNT(*) AS NUMERO
FROM NOTAS_FISCAIS
INNER JOIN TABELA_DE_VENDEDORES
ON NOTAS_FISCAIS.MATRICULA = TABELA_DE_VENDEDORES.MATRICULA
GROUP BY NOTAS_FISCAIS.MATRICULA, NOME;

-- USANDO ALIAS
SELECT NF.MATRICULA, NOME, COUNT(*) AS NUMERO
FROM NOTAS_FISCAIS NF
INNER JOIN TABELA_DE_VENDEDORES TV
ON NF.MATRICULA = TV.MATRICULA
GROUP BY NF.MATRICULA, NOME;

/*
BOA PRÁTICA: CHAMAR A TABELA SUPERIOR PRIMEIRO, NO CASO A TB DE VENDEDORES 
E DEPOIS A INFERIOR TB NOTAS FISCAIS. 
PORQUE HIERARQUICAMENTE A TABELA_DE_VENDEDORES ESTA ACIMA DA TB NOTAS_FISCAIS,
TENDO UM RELACIONAMENTO 1 PRA N RESPECTIVAMENTE
*/
SELECT NF.MATRICULA, NOME, COUNT(*) AS NUMERO
FROM TABELA_DE_VENDEDORES TV 
INNER JOIN NOTAS_FISCAIS NF
ON NF.MATRICULA = TV.MATRICULA
GROUP BY NF.MATRICULA, NOME;

/*
Em exercícios anteriores, pretendíamos obter os produtos que venderam 
mais que 394000 litros e para isso executamos a seguinte consulta.
Dito isso, e levando em consideração os comandos da consulta, desejamos que na resposta
desta consulta apareça não somente o código do produto, mas também o nome do produto.
*/
SELECT * FROM ITENS_NOTAS_FISCAIS
SELECT * FROM TABELA_DE_PRODUTOS

SELECT INF.CODIGO_DO_PRODUTO, TP.NOME_DO_PRODUTO, SUM(QUANTIDADE) AS QUANTIDADE
FROM TABELA_DE_PRODUTOS TP
INNER JOIN ITENS_NOTAS_FISCAIS INF
ON TP.CODIGO_DO_PRODUTO = INF.CODIGO_DO_PRODUTO
GROUP BY TP.CODIGO_DO_PRODUTO, 
		 INF.CODIGO_DO_PRODUTO, 
		 TP.NOME_DO_PRODUTO  
HAVING SUM(QUANTIDADE) > 1000 
ORDER BY SUM(QUANTIDADE) DESC;

--obs.: não irá retornar valores por que não há na base sucos que venderam mais que 394000 por isso usei 1000 no lugar
