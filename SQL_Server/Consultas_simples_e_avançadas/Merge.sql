-- O comando MERGE serve para que eu faça uma alteração em dados de uma tabela, baseado em outra tabela.
-- tem a mesma função do update com inner join
/*
UPDATE A SET A.PRECO_LISTA = B.PRECO_DE_LISTA
FROM PRODUTOS A 
INNER JOIN SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS B 
ON A.CODIGO = B.CODIGO_DO_PRODUTO;
*/

UPDATE SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS SET PRECO_DE_LISTA = PRECO_DE_LISTA * 1.20

SELECT 
A.CODIGO AS CODIGO_MINHA_TABELA, A.PRECO_LISTA AS PRECO_MINHA_TABELA,
B.CODIGO_DO_PRODUTO AS CODIGO_TABELA_APOIO, B.PRECO_DE_LISTA AS PRECO_TABELA_APOIO
FROM PRODUTOS A 
INNER JOIN SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS B 
ON A.CODIGO = B.CODIGO_DO_PRODUTO;
---------------------------------------------------------------
--USANDO MERGE PARA IGUALAR DADOS ENTRE DUAS TBS (PRECO_LISTA = PRECO_MINHA_TABELA & PRECO_DE_LISTA = PRECO_TABELA_APOIO )
MERGE INTO PRODUTOS A 
USING SUCOS_FRUTAS.DBO.TABELA_DE_PRODUTOS B
ON A.CODIGO = B.CODIGO_DO_PRODUTO --ASSOCIAÇÃO ENTRE AS DUAS TBS
WHEN MATCHED THEN -- QUANDO HOUVER UMA IGUALDADE ENTRE AS DUAS TBS..
UPDATE SET A.PRECO_LISTA = B.PRECO_DE_LISTA; -- ENTÃO FAÇA O UPDATE PARA SUBSTITUIR OS DADOS DIFERENTES

/*
Podemos observar que os vendedores possuem bairros associados a eles. Vamos aumentar em 30% 
o volume de compra dos clientes que possuem, em seus endereços, bairros onde os vendedores possuam escritórios.
*/

MERGE INTO  SUCOS_FRUTAS.[dbo].[TABELA_DE_CLIENTES] C
USING SUCOS_FRUTAS.[dbo].[TABELA_DE_VENDEDORES] V
ON C.[BAIRRO] = V.[BAIRRO]
WHEN MATCHED THEN
UPDATE SET C.[VOLUME_DE_COMPRA] = C.[VOLUME_DE_COMPRA] * 1.30;

--VERIFICANDO O UP DATE COM O SELECT
SELECT C.[BAIRRO] AS BAIRRO_CLIENTE, 
	   V.[BAIRRO] AS BAIRRO_VENDEDOR, 
	   VOLUME_DE_COMPRA AS VOL_COMPRA  
FROM SUCOS_FRUTAS.DBO.TABELA_DE_CLIENTES C 
INNER JOIN SUCOS_FRUTAS.DBO.TABELA_DE_VENDEDORES V
ON V.[BAIRRO] = C.[BAIRRO]
