-- Controle de fluxo usando VARIÁVEIS e controle se fluxo usando o SELECT

CREATE TABLE TABELA_TESTE (ID VARCHAR (10));

-- Aplica uma condição antes de executar o comando.
IF OBJECT_ID('TABELA_TESTE', 'U') IS NOT NULL --SE A TABELA EXISTIR DELETA ELA
	DROP TABLE TABELA_TESTE

IF OBJECT_ID('TABELA_TESTE', 'U') IS NULL -- SE A TABELA NÃO EXISTIR CRIA ELA
	CREATE TABLE TABELA_TESTE(ID VARCHAR (10));
--------------------------------------------------------------------------------
DECLARE @IDADE_ALUNO INT;
DECLARE @FORMADO_INGLES BIT;
DECLARE @FORMADO_ALEMAO BIT;

SET @IDADE_ALUNO = 17;
SET @FORMADO_INGLES = 1;
SET @FORMADO_ALEMAO = 0;

IF ((@IDADE_ALUNO >= 18 OR @FORMADO_INGLES = 1) OR (@IDADE_ALUNO < 18 AND @FORMADO_ALEMAO = 1))
  PRINT 'EXPRESSAO VERDADEIRA';
ELSE
  PRINT 'EXPRESSAO FALSA';
--------------------------------------------------------------------------
SELECT GETDATE(); -- RETORNA A DATA E HORA

SELECT DATENAME(WEEKDAY, GETDATE()); -- RETORNA O DIA DA SEMANA

SELECT DATEADD (DAY, 5, GETDATE()); -- RETORNA 5 DIAS À FRENTE

SELECT GETDATE(), DATEADD (DAY, 5, GETDATE())-- RETORNA O DIA DE HJ E OS 5 DIAS SEGUINTES

SELECT DATENAME(WEEKDAY, DATEADD (DAY, 5, GETDATE()));-- RETORNA QUAL DIA DA SEMANA SERÁ DAQUI 5 DIAS

-- A MESMA COISA Q A LINHA A CIMA SÓ Q ATRIBUINDO VALORES A VARIÁVEIS
DECLARE @DIA_SEMANA VARCHAR(20);
DECLARE @NUMERO_DIAS INT;

SET @NUMERO_DIAS = 7;
SET @DIA_SEMANA =DATENAME(WEEKDAY, DATEADD (DAY, @NUMERO_DIAS, GETDATE()))
PRINT @DIA_SEMANA

-- COMO SABER SE ESSE DIA FAZ PARTE OU NÃO DE UM FDS
IF @DIA_SEMANA = 'domingo' OR @DIA_SEMANA = 'sábado'
	PRINT 'Este dia é fim de semana.'
ELSE 
	PRINT'Ete dia é dia de semana';
-----------------------------------------------------------------------
/*
   DECLARE @CPF VARCHAR(15);
   DECLARE @DATA_NASCIMENTO DATE;
   DECLARE @IDADE INT;
   SET @CPF = '1471156710';
   SELECT @DATA_NASCIMENTO = [DATA DE NASCIMENTO] FROM [TABELA DE CLIENTES] WHERE CPF = @CPF;
   SET @IDADE = DATEDIFF(YEAR, @DATA_NASCIMENTO, GETDATE());
   UPDATE [TABELA DE CLIENTES] SET IDADE = @IDADE WHERE CPF = @CPF;
*/
-- como poderemos modificar o SCRIPT acima para apenas fazer a alteração da IDADE se a mesma, que está na tabela, seja diferente da calculada?

   DECLARE @CPF VARCHAR(15);
   DECLARE @DATA_NASCIMENTO DATE;
   DECLARE @IDADE INT;
   DECLARE @IDADE_TABELA INT; -- variável que recebe o valor da IDADE na tabela.

   SET @CPF = '2600586709';
   SELECT @DATA_NASCIMENTO = [DATA DE NASCIMENTO], -- atribui a esta variável a idade da tabela
   @IDADE_TABELA = IDADE FROM [TABELA DE CLIENTES] WHERE CPF = @CPF;

   SET @IDADE = DATEDIFF(YEAR, @DATA_NASCIMENTO, GETDATE()); -- Calcula a idade atual
   
   -- validação antes de executar o comando UPDATE.
   IF @IDADE_TABELA <> @IDADE UPDATE [TABELA DE CLIENTES] 
		SET IDADE = @IDADE WHERE CPF = @CPF;

	PRINT @IDADE_TABELA; -- mostra a idade desatualizada
	PRINT @IDADE; -- mostra a idade atualizada
   
   SELECT NOME, [DATA DE NASCIMENTO], IDADE FROM [TABELA DE CLIENTES] WHERE CPF = '2600586709';
-------------------------------------------------------------------------------------------------------
--Analisando os limites de crédito de cleintes por bairro
SELECT BAIRRO, SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES] GROUP BY BAIRRO -- VALOR TOTAL DE LIM DE CREDITO POR BAIRRO
SELECT SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES] WHERE BAIRRO = 'Água Santa' -- VENDO O LIM DE QUEM MORA EM Água Santa
------------------------------
DECLARE @LIMITE_MAXIMO FLOAT;
DECLARE @LIMITE_ATUAL FLOAT;
DECLARE @BAIRRO VARCHAR(20);

--COMPARA SE LIMITE ATUAL É < OU > Q LIM MAX
SET @LIMITE_MAXIMO = 50000;
SET @BAIRRO = 'Água Santa'; --limite 100000,00

-- A VAR @LIMITE_ATUAL RECEBE O VALOR TOTAL DO LIM DE CREDITO DE DETERMINADO BAIRRO
SELECT @LIMITE_ATUAL = SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES] WHERE BAIRRO = @BAIRRO;
IF  @LIMITE_ATUAL >= @LIMITE_MAXIMO 
	PRINT 'limite atual é maior ou igual ao limite maximo'
ELSE
	PRINT 'limite atual é menor que o limite maximo'

--MESMO CODIGO DE CIMA SEM USO DA VAR LIMITE_ATUAL
/*
DECLARE @LIMITE_MAXIMO FLOAT;
DECLARE @BAIRRO VARCHAR(20);

--COMPARA SE LIMITE ATUAL É < OU > Q LIM MAX
SET @LIMITE_MAXIMO = 500000; -- TESTANDO A OUTRA CONDIÇÃO (ELSE)
SET @BAIRRO = 'Água Santa'; --limite 100000,00

IF  (SELECT SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES] WHERE BAIRRO = @BAIRRO) >= @LIMITE_MAXIMO
	PRINT 'limite atual é maior ou igual ao limite maximo'
ELSE
	PRINT 'limite atual é menor que o limite maximo'
*/